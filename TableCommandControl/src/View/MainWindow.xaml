<Window x:Class="TableCommandControl.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TableCommandControl"
        xmlns:view="clr-namespace:TableCommandControl.View"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:behaviors="clr-namespace:Com.QueoFlow.Commons.Mvvm.Behaviors;assembly=Queo.Commons.MVVM"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:generators="clr-namespace:TableCommandControl.View.PatternGenerators"
        mc:Ignorable="d"
        Background="Gainsboro"
        Title="MainWindow"
        Height="850"
        Width="1024">
    <Window.Resources>
        <DataTemplate DataType="{x:Type generators:CircleGenerator}">
            <Border BorderThickness="1"
                    BorderBrush="Gray">
                <Expander Header="Circle Generator"
                          IsExpanded="True"
                          Background="LightSteelBlue"
                          Style="{DynamicResource ExpanderStyle}">
                    <StackPanel Margin="5">
                        <HeaderedContentControl Header="Circle radius:">
                            <xctk:IntegerUpDown Value="{Binding CircleRadius}" />
                        </HeaderedContentControl>
                        <Button Content="Generate Coordinates"
                                DockPanel.Dock="Bottom"
                                Command="{Binding GenerateCircleCommand}" />
                    </StackPanel>
                </Expander>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type generators:HelixGenerator}">
            <Border BorderThickness="1"
                    BorderBrush="Gray">
                <Expander Header="Helix Generator"
                          IsExpanded="True"
                          Background="LightSteelBlue"
                          Style="{DynamicResource ExpanderStyle}">
                    <StackPanel Margin="5">
                        <HeaderedContentControl Header="Start radius:">
                            <xctk:IntegerUpDown Value="{Binding HelixStartRadius}"
                                                Minimum="0" />
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="End radius:">
                            <xctk:IntegerUpDown Value="{Binding HelixEndRadius}"
                                                Minimum="0" />
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="Number of whorls:">
                            <xctk:DoubleUpDown Value="{Binding HelixWhorls}"
                                               Minimum="1" />
                        </HeaderedContentControl>
                        <Button Content="Generate Coordinates"
                                DockPanel.Dock="Bottom"
                                Command="{Binding GenerateHelixCommand}" />

                    </StackPanel>
                </Expander>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type generators:RectangleGenerator}">
            <Border BorderThickness="1"
                    BorderBrush="Gray">
                <Expander Header="Rectangle Generator"
                          IsExpanded="True"
                          Background="LightSteelBlue"
                          Style="{DynamicResource ExpanderStyle}">
                    <StackPanel Margin="5">
                        <HeaderedContentControl Header="Side length:">
                            <xctk:IntegerUpDown Value="{Binding SideA}"
                                                Minimum="0" />
                        </HeaderedContentControl>
                   
                        <Button Content="Generate Coordinates"
                                DockPanel.Dock="Bottom"
                                Command="{Binding GenerateCommand}" />

                    </StackPanel>
                </Expander>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type generators:RectangularHelixGenerator}">
            <Border BorderThickness="1"
                    BorderBrush="Gray">
                <Expander Header="Rectangle Helix Generator"
                          IsExpanded="True"
                          Background="LightSteelBlue"
                          Style="{DynamicResource ExpanderStyle}">
                    <StackPanel Margin="5">
                        <HeaderedContentControl Header="Side length:">
                            <xctk:IntegerUpDown Value="{Binding SideA}"
                                                Minimum="0" />
                        </HeaderedContentControl>
                   
                        <Button Content="Generate Coordinates"
                                DockPanel.Dock="Bottom"
                                Command="{Binding GenerateCommand}" />

                    </StackPanel>
                </Expander>
            </Border>
        </DataTemplate>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="MinHeight"
                    Value="26" />
            <Setter Property="Margin"
                    Value="0,2" />
        </Style>

    </Window.Resources>
    <i:Interaction.Behaviors>
        <behaviors:InfoMessageBehavior InfoMessage="{Binding InfoMessage}" />
        <behaviors:ErrorMessageBoxBehavior ErrorMessage="{Binding ErrorMessage}" />
    </i:Interaction.Behaviors>
    <d:DesignerProperties.DataContext>
        <view:DMainViewModel />
    </d:DesignerProperties.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="5" />
            <ColumnDefinition />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockPanel Grid.IsSharedSizeScope="True">
            <HeaderedContentControl Header="Port:" DockPanel.Dock="Top">
                <ComboBox SelectedItem="{Binding Port}" ItemsSource="{Binding Ports}"></ComboBox>
            </HeaderedContentControl>
            <HeaderedContentControl Header="Table radius [mm]:"
                                    DockPanel.Dock="Top">
                <xctk:IntegerUpDown Value="{Binding TableRadiusInMillimeters}"
                                    Minimum="0" />
            </HeaderedContentControl>
            <HeaderedContentControl Header="Steps:"
                                    DockPanel.Dock="Top">
                <xctk:IntegerUpDown Value="{Binding Steps}"
                                    Minimum="0" />
            </HeaderedContentControl>  
            <HeaderedContentControl Header="Angle Factor:"
                                    DockPanel.Dock="Top">
                <xctk:DoubleUpDown Value="{Binding AngleFactor}" Increment="0.1"
                                    Minimum="0" />
            </HeaderedContentControl>    
            <HeaderedContentControl Header="Radius Factor:"
                                    DockPanel.Dock="Top">
                <xctk:DoubleUpDown Value="{Binding RadiusFactor}" Increment="0.1"
                                    Minimum="0" />
            </HeaderedContentControl>
            <GroupBox Header="Generatoren">
                <ListView ItemsSource="{Binding PatternGenerators}"
                          
                          Background="Transparent"
                          BorderThickness="0" />

            </GroupBox>
        </DockPanel>
        <GridSplitter Grid.Row="0"
                      Grid.Column="1"
                      Background="DarkGray"
                      Width="5"
                      ResizeBehavior="PreviousAndNext" />
        <GroupBox Grid.Row="0"
                  Grid.Column="2"
                  Header="Polar coordinates">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ListView ItemsSource="{Binding PolarCoordinates}" SelectedItem="{Binding CurrentPolarCoordinate, Mode=TwoWay}"/>
                <StatusBar Grid.Row="1">
                    <Button Content="Start sending"
                            Command="{Binding StartSendingCommand}" />
                    <Button Content="Stop sending"
                            Command="{Binding StopSendingCommand}" />
                </StatusBar>
            </Grid>
        </GroupBox>
        <GridSplitter Grid.Row="0"
                      Background="DarkGray"
                      Width="5"
                      Grid.Column="3"
                      ResizeBehavior="PreviousAndNext" />
        <GroupBox Grid.Row="0"
                  Grid.Column="4"
                  Header="Preview">
            <oxy:Plot PlotType="Polar"
                      IsMouseWheelEnabled="True">
                <oxy:Plot.Series>
                    <oxy:LineSeries ItemsSource="{Binding PolarCoordinates}" 
                                    DataFieldY="AngleNormalized" Color="DarkBlue" StrokeThickness="1"
                                    DataFieldX="Radius" />
                    <oxy:ScatterSeries ItemsSource="{Binding PolarCoordinates}" 
                                    DataFieldY="AngleNormalized"  MarkerSize="2" MarkerType="Circle" MarkerFill="DarkBlue"
                                    DataFieldX="Radius" />
                    <oxy:ScatterSeries ItemsSource="{Binding CurrentPoints}"  MarkerSize="3" MarkerFill="Transparent" MarkerType="Circle" MarkerStrokeThickness="1" MarkerStroke="Crimson"
                                    DataFieldY="AngleNormalized"
                                    DataFieldX="Radius" />
                </oxy:Plot.Series>
<oxy:Plot.Axes>
    <oxy:MagnitudeAxis Minimum="0" Maximum="{Binding TableRadiusInMillimeters}" />
    <oxy:AngleAxis Minimum="0" Maximum="360" />
</oxy:Plot.Axes>
            </oxy:Plot>
        </GroupBox>
        <GridSplitter Grid.Row="1"
                      Background="DarkGray"
                      Height="5"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      Grid.Column="0"
                      Grid.ColumnSpan="5"
                      ResizeBehavior="PreviousAndNext" />
        <GroupBox Grid.ColumnSpan="5"
                  Grid.Column="0"
                  Grid.Row="2"
                  Header="Communication Protocol">
            <ListBox Name="ListBox" Height="200" >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"></TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>

    </Grid>
</Window>